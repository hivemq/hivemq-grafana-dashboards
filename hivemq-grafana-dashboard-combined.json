{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 17,
      "panels": [],
      "title": "Overview",
      "type": "row"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 100,
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 0,
        "y": 1
      },
      "id": 7,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.system.os.global.cpu.total.total\")\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: mean)\n  |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"metricName\", \"_field\"])",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_system_os_global_cpu_total_total",
          "hide": false,
          "instant": false,
          "legendFormat": "{{instance}} cpu.total",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "CPU %",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 6,
        "y": 1
      },
      "id": 8,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.system.os.global.memory.total\")\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: mean)\n  |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.system.os.global.memory.available\")\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: mean)\n  |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_system_os_global_memory_total",
          "instant": false,
          "legendFormat": "{{instance}} memory.total",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_system_os_global_memory_available",
          "hide": false,
          "instant": false,
          "legendFormat": "{{instance}} memory.available",
          "range": true,
          "refId": "D"
        }
      ],
      "title": "System Memory",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 9,
        "y": 1
      },
      "id": 9,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_jvm_memory_heap_max",
          "hide": false,
          "instant": false,
          "legendFormat": "{{instance}} heap.max",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_jvm_memory_heap_init",
          "hide": false,
          "instant": false,
          "legendFormat": "{{instance}} heap.init",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_jvm_memory_heap_used",
          "hide": false,
          "instant": false,
          "legendFormat": "{{instance}} heap.used",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.jvm.memory.heap.max\")\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: mean)\n  |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])",
          "refId": "D"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.jvm.memory.heap.init\")\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: mean)\n  |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])",
          "refId": "E"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.jvm.memory.heap.used\")\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: mean)\n  |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])",
          "refId": "F"
        }
      ],
      "title": "Heap",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 12,
        "y": 1
      },
      "id": 3,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_networking_connections_current",
          "instant": false,
          "legendFormat": "{{instance}} connections",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.networking.connections.current\")\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: mean)\n  |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"metricName\", \"_field\"])",
          "refId": "B"
        }
      ],
      "title": "Current MQTT Connections",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 18,
        "y": 1
      },
      "id": 38,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_cluster_nodes_count",
          "instant": false,
          "legendFormat": "{{instance}} connections",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.cluster.nodes.count\")\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: mean)\n  |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"metricName\", \"_field\"])",
          "refId": "B"
        }
      ],
      "title": "Cluster Nodes",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 32,
      "panels": [],
      "title": "IO",
      "type": "row"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 0,
        "y": 9
      },
      "id": 33,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(label_replace({__name__=~\"com_hivemq_system_os_network_interface_.+_bytes_received\"}, \"interface\", \"$1\", \"__name__\", \"com_hivemq_system_os_network_interface_(.+)_bytes_received\")[${intervalSeconds}s:${intervalSeconds}s])",
          "hide": false,
          "instant": false,
          "legendFormat": "{{instance}} {{interface}} bytes.incoming",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.system\\.os\\.network-interface(.+)bytes-received/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "incoming Bytes/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 6,
        "y": 9
      },
      "id": 34,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(label_replace({__name__=~\"com_hivemq_system_os_network_interface_.+_bytes_sent\"}, \"interface\", \"$1\", \"__name__\", \"com_hivemq_system_os_network_interface_(.+)_bytes_sent\")[${intervalSeconds}s:${intervalSeconds}s])",
          "hide": false,
          "instant": false,
          "legendFormat": "{{instance}} {{interface}} bytes.outgoing",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.system\\.os\\.network-interface(.+)bytes-sent/)\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "outgoing Bytes/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 12,
        "y": 9
      },
      "id": 36,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(label_replace({__name__=~\"com_hivemq_system_os_disks_(.*)_read_bytes\"}, \"disk\", \"$1\", \"__name__\", \"com_hivemq_system_os_disks_(.*)_read_bytes\")[${intervalSeconds}s:${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} {{interface}} bytes.read",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.system\\.os\\.disks(.+)read\\.bytes/)\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "Disk Bytes Read/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 18,
        "y": 9
      },
      "id": 37,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(label_replace({__name__=~\"com_hivemq_system_os_disks_.+_write_bytes\"}, \"interface\", \"$1\", \"__name__\", \"com_hivemq_system_os_disks_(.+)_write_bytes\")[${intervalSeconds}s:${intervalSeconds}s])",
          "hide": false,
          "instant": false,
          "legendFormat": "{{instance}} {{interface}} bytes.written",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.system\\.os\\.disks(.+)write\\.bytes/)\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "Disk Bytes Written/s",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 16
      },
      "id": 2,
      "panels": [],
      "title": "MQTT",
      "type": "row"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 0,
        "y": 17
      },
      "id": 14,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_messages_queued_count",
          "instant": false,
          "legendFormat": "{{instance}} queued",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.queued.count\")\n  |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: max)",
          "refId": "B"
        }
      ],
      "title": "Queued Messages",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 6,
        "y": 17
      },
      "id": 11,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_sessions_overall_current",
          "instant": false,
          "legendFormat": "{{instance}} sessions",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.sessions.overall.current\")\n  |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: max)",
          "refId": "B"
        }
      ],
      "title": "Current MQTT Sessions",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 12,
        "y": 17
      },
      "id": 12,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_messages_retained_current",
          "instant": false,
          "legendFormat": "{{instance}} retained",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.retained.current\")\n  |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: max)",
          "refId": "B"
        }
      ],
      "title": "Retained Messages",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 18,
        "y": 17
      },
      "id": 13,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_subscriptions_overall_current",
          "instant": false,
          "legendFormat": "{{instance}} subscriptions",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.subscriptions.overall.current\")\n  |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: max)",
          "refId": "B"
        }
      ],
      "title": "Current Subscriptions",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 24
      },
      "id": 21,
      "panels": [],
      "title": "MQTT PUBLISH",
      "type": "row"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 0,
        "y": 25
      },
      "id": 15,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_incoming_publish_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{job}} outgoing.publish",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.incoming.publish.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "incoming PUBLISH/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 6,
        "y": 25
      },
      "id": 4,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_outgoing_publish_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} outgoing.publish",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.outgoing.publish.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "outgoing PUBLISH/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 12,
        "y": 25
      },
      "id": 22,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_incoming_puback_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} outgoing.publish",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.incoming.puback.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "incoming PUBACK/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 15,
        "y": 25
      },
      "id": 23,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_outgoing_puback_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} outgoing.publish",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.outgoing.puback.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "outgoing PUBACK/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 18,
        "y": 25
      },
      "id": 24,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_incoming_pubrec_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} outgoing.publish",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.incoming.pubrec.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "incoming PUBREC/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 21,
        "y": 25
      },
      "id": 25,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_outgoing_pubrec_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} outgoing.publish",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.outgoing.pubrec.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "outgoing PUBREC/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 0,
        "y": 32
      },
      "id": 26,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_incoming_pubrel_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} outgoing.publish",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.incoming.pubrel.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "incoming PUBREL/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 3,
        "y": 32
      },
      "id": 27,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_outgoing_pubrel_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} outgoing.publish",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.outgoing.pubrel.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "outgoing PUBREL/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 6,
        "y": 32
      },
      "id": 28,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_incoming_pubcomp_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} outgoing.publish",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.incoming.pubcomp.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "incoming PUBACK/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 9,
        "y": 32
      },
      "id": 29,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_outgoing_pubcomp_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} outgoing.publish",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.outgoing.pubcomp.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "outgoing PUBCOMP/s",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 39
      },
      "id": 18,
      "panels": [],
      "title": "MQTT Control Packets",
      "type": "row"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 0,
        "y": 40
      },
      "id": 1,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_incoming_connect_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} incoming.connect",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.incoming.connect.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "incoming CONNECT/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 3,
        "y": 40
      },
      "id": 16,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_outgoing_connack_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} incoming.connect",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.outgoing.connack.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "outgoing CONACK/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 6,
        "y": 40
      },
      "id": 5,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_incoming_subscribe_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} incoming.subscribe",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.incoming.subscribe.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "incoming SUBSCRIBE/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 9,
        "y": 40
      },
      "id": 19,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_outgoing_suback_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} incoming.subscribe",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.outgoing.suback.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "outgoing SUBACK/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 12,
        "y": 40
      },
      "id": 6,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_incoming_unsubscribe_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} incoming.unsubscribe",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.incoming.unsubscribe.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "incoming UNSUBSCRIBE/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 15,
        "y": 40
      },
      "id": 20,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_outgoing_unsuback_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} incoming.unsubscribe",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.outgoing.unsuback.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "outgoing UNSUBACK/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 18,
        "y": 40
      },
      "id": 30,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_incoming_pingreq_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} incoming.unsubscribe",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.incoming.pingreq.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "incoming PINGRESP/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 21,
        "y": 40
      },
      "id": 31,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_messages_outgoing_pingresp_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{instance}} incoming.unsubscribe",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.messages.outgoing.pingresp.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        }
      ],
      "title": "outgoing PINGRESP/s",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 47
      },
      "id": 39,
      "panels": [],
      "title": "HiveMQ Cluster",
      "type": "row"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 0,
        "y": 48
      },
      "id": 40,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_cluster_nodes_count",
          "instant": false,
          "legendFormat": "{{instance}} connections",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.cluster.nodes.count\")\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: mean)\n  |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"metricName\", \"_field\"])",
          "refId": "B"
        }
      ],
      "title": "Cluster Nodes",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 3,
        "y": 48
      },
      "id": 97,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_overload_protection_level",
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.overload-protection.level\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)",
          "refId": "B"
        }
      ],
      "title": "Overload Protection Level",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 6,
        "y": 48
      },
      "id": 98,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_overload_protection_clients_average_credits",
          "hide": false,
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.overload-protection.clients.average-credits\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)",
          "refId": "B"
        }
      ],
      "title": "Overload Protection average credits",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 12,
        "y": 48
      },
      "id": 99,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_overload_protection_credits_per_tick",
          "hide": false,
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.overload-protection.credits.per-tick\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)",
          "refId": "B"
        }
      ],
      "title": "Overload Protection credits per tick",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 18,
        "y": 48
      },
      "id": 100,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_overload_protection_clients_backpressure_active",
          "hide": false,
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.overload-protection.clients.backpressure-active\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)",
          "refId": "B"
        }
      ],
      "title": "Overload Protection backpressure active",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 55
      },
      "id": 101,
      "panels": [],
      "title": "JVM",
      "type": "row"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 0,
        "y": 56
      },
      "id": 102,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_jvm_memory_heap_max",
          "hide": false,
          "instant": false,
          "legendFormat": "{{instance}} heap.max",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_jvm_memory_heap_init",
          "hide": false,
          "instant": false,
          "legendFormat": "{{instance}} heap.init",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "com_hivemq_jvm_memory_heap_used",
          "hide": false,
          "instant": false,
          "legendFormat": "{{instance}} heap.used",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.jvm.memory.heap.max\")\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: mean)\n  |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])",
          "refId": "D"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.jvm.memory.heap.init\")\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: mean)\n  |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])",
          "refId": "E"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.jvm.memory.heap.used\")\n  |> aggregateWindow(every: ${intervalSeconds}s, fn: mean)\n  |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])",
          "refId": "F"
        }
      ],
      "title": "Heap",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 6,
        "y": 56
      },
      "id": 104,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_jvm_garbage_collector_G1_Old_Generation_count[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{job}} old.gen.count",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_jvm_garbage_collector_G1_Young_Generation_count[${intervalSeconds}s])",
          "hide": false,
          "instant": false,
          "legendFormat": "{{job}} young.gen.count",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.jvm.garbage-collector.G1-Old-Generation.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.jvm.garbage-collector.G1-Young-Generation.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "D"
        }
      ],
      "title": "GC/s",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 12,
        "y": 56
      },
      "id": 105,
      "interval": "${intervalSeconds}s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_jvm_garbage_collector_G1_Old_Generation_time[${intervalSeconds}s])",
          "instant": false,
          "legendFormat": "{{job}} old.gen.time",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Prometheus}"
          },
          "editorMode": "code",
          "expr": "rate(com_hivemq_jvm_garbage_collector_G1_Young_Generation_time[${intervalSeconds}s])",
          "hide": false,
          "instant": false,
          "legendFormat": "{{job}} young.gen.time",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.jvm.garbage-collector.G1-Old-Generation.time\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${InfluxDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] == \"com.hivemq.jvm.garbage-collector.G1-Young-Generation.time\")\n    |> drop(columns: [\"_start\", \"_stop\", \"metricName\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
          "refId": "D"
        }
      ],
      "title": "GC times",
      "type": "timeseries"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 63
      },
      "id": 56,
      "panels": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 0,
            "y": 56
          },
          "id": 57,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_(.+)_success_count\", __name__!=\"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_total_success_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_(.+)_success_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.amazon-kinesis\\.mqtt-to-kinesis(.+)success\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.amazon-kinesis.mqtt-to-kinesis.total.success.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to Amazon Kinesis success/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 6,
            "y": 56
          },
          "id": 58,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_(.+)_failed_count\", __name__!=\"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_total_failed_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_(.+)_failed_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.amazon-kinesis\\.mqtt-to-kinesis(.+)failed\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.amazon-kinesis.mqtt-to-kinesis.total.failed.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to Amazon Kinesis failure/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 12,
            "y": 56
          },
          "id": 60,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_(.+)_sent_count\", __name__!=\"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_total_sent_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_(.+)_sent_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.amazon-kinesis\\.mqtt-to-kinesis(.+)\\.sent\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.amazon-kinesis.mqtt-to-kinesis.total.sent.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to Amazon Kinesis sent/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 18,
            "y": 56
          },
          "id": 59,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_(.+)_resent_count\", __name__!=\"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_total_resent_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_(.+)_resent_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.amazon-kinesis\\.mqtt-to-kinesis(.+)resent\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.amazon-kinesis.mqtt-to-kinesis.total.resent.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to Amazon Kinesis resent/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 0,
            "y": 63
          },
          "id": 63,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_(.+)_ignored_count\", __name__!=\"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_total_ignored_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_(.+)_ignored_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.amazon-kinesis\\.mqtt-to-kinesis(.+)ignored\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.amazon-kinesis.mqtt-to-kinesis.total.ignored.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to Amazon Kinesis ignored/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 6,
            "y": 63
          },
          "id": 64,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_(.+)_dropped_count\", __name__!=\"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_total_dropped_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_amazon_kinesis_mqtt_to_kinesis_(.+)_dropped_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.amazon-kinesis\\.mqtt-to-kinesis(.+)dropped\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.amazon-kinesis.mqtt-to-kinesis.total.dropped.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to Amazon Kinesis resent/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 12,
            "y": 63
          },
          "id": 61,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_(.+)_success_count\", __name__!=\"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_total_success_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_(.+)_success_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.amazon-kinesis\\.kinesis-to-mqtt(.+)success\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.amazon-kinesis.kinesis-to-mqtt.total.success.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "Amazon Kinesis to MQTT success/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 18,
            "y": 63
          },
          "id": 62,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_(.+)_failed_count\", __name__!=\"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_total_failed_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_(.+)_failed_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.amazon-kinesis\\.kinesis-to-mqtt(.+)failed\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.amazon-kinesis.kinesis-to-mqtt.total.failed.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "Amazon Kinesis to MQTT failure/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 0,
            "y": 70
          },
          "id": 65,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_(.+)_sent_count\", __name__!=\"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_total_sent_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_(.+)_sent_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.amazon-kinesis\\.kinesis-to-mqtt(.+)\\.sent\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.amazon-kinesis.kinesis-to-mqtt.total.sent.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "Amazon Kinesis to MQTT sent/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 6,
            "y": 70
          },
          "id": 66,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_(.+)_ignored_count\", __name__!=\"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_total_ignored_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_(.+)_ignored_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.amazon-kinesis\\.kinesis-to-mqtt(.+)\\.ignored\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.amazon-kinesis.kinesis-to-mqtt.total.ignored.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "Amazon Kinesis to MQTT ignored/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 12,
            "y": 70
          },
          "id": 67,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_(.+)_dropped_count\", __name__!=\"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_total_dropped_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_(.+)_dropped_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.amazon-kinesis\\.kinesis-to-mqtt(.+)\\.dropped\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.amazon-kinesis.kinesis-to-mqtt.total.dropped.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "Amazon Kinesis to MQTT dropped/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 18,
            "y": 70
          },
          "id": 68,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_(.+)_rate_limit_exceeded_count\", __name__!=\"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_total_rate_limit_exceeded_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_(.+)_rate_limit_exceeded_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.amazon-kinesis\\.kinesis-to-mqtt(.+)\\.rate-limit-exceeded\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.amazon-kinesis.kinesis-to-mqtt.total.rate-limit-exceeded.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "Amazon Kinesis to MQTT rate-limit-exceeded/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 0,
            "y": 77
          },
          "id": 69,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_(.+)_received_count\", __name__!=\"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_total_received_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_amazon_kinesis_kinesis_to_mqtt_(.+)_received_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.amazon-kinesis\\.kinesis-to-mqtt(.+)\\.received\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.amazon-kinesis.kinesis-to-mqtt.total.received.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "Amazon Kinesis to MQTT received/s",
          "type": "timeseries"
        }
      ],
      "title": "HiveMQ Enterprise Extension for Amazon Kinesis",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 64
      },
      "id": 70,
      "panels": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 0,
            "y": 125
          },
          "id": 73,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_bridge_extension_(.+)_publish_meter_total\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_bridge_extension_(.+)_publish_meter_total\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.bridge-extension\\.(.+)\\.publish\\.meter/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "outgoing PUBLISH/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 6,
            "y": 125
          },
          "id": 75,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_bridge_extension_(.+)_publish_failed_meter_total\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_bridge_extension_(.+)_publish_failed_meter_total\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.bridge-extension\\.(.+)\\.publish-failed\\.meter/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "incoming PUBLISH failed/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 12,
            "y": 125
          },
          "id": 74,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_bridge_extension_(.+)_subscribed_message_meter_total\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_bridge_extension_(.+)_subscribed_message_meter_total\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.bridge-extension\\.(.+)\\.subscribed-message\\.meter/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "incoming PUBLISH/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 18,
            "y": 125
          },
          "id": 76,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_bridge_extension_(.+)_subscribed_message_failed_meter_total\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_bridge_extension_(.+)_subscribed_message_failed_meter_total\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.bridge-extension\\.(.+)\\.subscribed-message-failed\\.meter/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "incoming PUBLISH failed/s",
          "type": "timeseries"
        }
      ],
      "title": "HiveMQ Enterprise Bridge Extension",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 65
      },
      "id": 41,
      "panels": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 0,
            "y": 56
          },
          "id": 42,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_data_lake_mqtt_to_s3_(.+)_success_count\", __name__!=\"com_hivemq_extensions_data_lake_mqtt_to_s3_total_success_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_data_lake_mqtt_to_s3_(.+)_success_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.data-lake\\.mqtt-to-s3(.+)success\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.data-lake.mqtt-to-s3.total.success.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to S3 success/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 6,
            "y": 56
          },
          "id": 43,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_data_lake_mqtt_to_s3_(.+)_failed_count\", __name__!=\"com_hivemq_extensions_data_lake_mqtt_to_s3_total_failed_count\"}, \"interface\", \"$1\", \"__name__\", \"com_hivemq_extensions_data_lake_mqtt_to_s3_(.+)_failed_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.data-lake\\.mqtt-to-s3(.+)failed\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.data-lake.mqtt-to-s3.total.failed.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to S3 failed/s",
          "type": "timeseries"
        }
      ],
      "title": "HiveMQ Enterprise Data Lake Extension",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 66
      },
      "id": 82,
      "panels": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 0,
            "y": 141
          },
          "id": 79,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_google_cloud_pubsub_mqtt_to_pubsub_(transformer|mapping)_(.+)_sent_count\", __name__!~\".*total.*\"}, \"route\", \"$2\", \"__name__\", \"com_hivemq_extensions_google_cloud_pubsub_mqtt_to_pubsub_(transformer|mapping)_(.+)_sent_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.google-cloud-pubsub\\.mqtt-to-pubsub\\.(transformer|mapping)\\.(.+)\\.sent\\.count/ and r[\"_measurement\"] !~ /.*total.*/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to PubSub success/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 6,
            "y": 141
          },
          "id": 84,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_google_cloud_pubsub_mqtt_to_pubsub_(transformer|mapping)_(.+)_failed_count\", __name__!~\".*total.*\"}, \"route\", \"$2\", \"__name__\", \"com_hivemq_extensions_google_cloud_pubsub_mqtt_to_pubsub_(transformer|mapping)_(.+)_failed_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.google-cloud-pubsub\\.mqtt-to-pubsub\\.(mapping|transformer)\\.(.+)\\.failed\\.count/ and r[\"_measurement\"] !~ /.*total.*/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to PubSub failed/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 12,
            "y": 141
          },
          "id": 87,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_google_cloud_pubsub_mqtt_to_pubsub_(transformer|mapping)_(.+)_sent_count\", __name__!~\".*total.*\"}, \"route\", \"$2\", \"__name__\", \"com_hivemq_extensions_google_cloud_pubsub_mqtt_to_pubsub_(transformer|mapping)_(.+)_sent_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.google-cloud-pubsub\\.mqtt-to-pubsub\\.(mapping|transformer)\\.(.+)\\.sent\\.count/ and r[\"_measurement\"] !~ /.*total.*/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to PubSub sent/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 18,
            "y": 141
          },
          "id": 88,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_google_cloud_pubsub_mqtt_to_pubsub_(transformer|mapping)_(.+)_resent_count\", __name__!~\".*total.*\"}, \"route\", \"$2\", \"__name__\", \"com_hivemq_extensions_google_cloud_pubsub_mqtt_to_pubsub_(transformer|mapping)_(.+)_resent_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.google-cloud-pubsub\\.mqtt-to-pubsub\\.(mapping|transformer)\\.(.+)\\.resent\\.count/ and r[\"_measurement\"] !~ /.*total.*/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to PubSub resent/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 0,
            "y": 148
          },
          "id": 89,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_google_cloud_pubsub_mqtt_to_pubsub_(transformer|mapping)_(.+)_ignored_count\", __name__!~\".*total.*\"}, \"route\", \"$2\", \"__name__\", \"com_hivemq_extensions_google_cloud_pubsub_mqtt_to_pubsub_(transformer|mapping)_(.+)_ignored_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.google-cloud-pubsub\\.mqtt-to-pubsub\\.(mapping|transformer)\\.(.+)\\.ignored\\.count/ and r[\"_measurement\"] !~ /.*total.*/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to PubSub ignored/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 6,
            "y": 148
          },
          "id": 90,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_google_cloud_pubsub_mqtt_to_pubsub_(transformer|mapping)_(.+)_dropped_count\", __name__!~\".*total.*\"}, \"route\", \"$2\", \"__name__\", \"com_hivemq_extensions_google_cloud_pubsub_mqtt_to_pubsub_(transformer|mapping)_(.+)_dropped_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.google-cloud-pubsub\\.mqtt-to-pubsub\\.(mapping|transformer)\\.(.+)\\.dropped\\.count/ and r[\"_measurement\"] !~ /.*total.*/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to PubSub dropped/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 12,
            "y": 148
          },
          "id": 85,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_success_count\", __name__!~\".*total.*\"}, \"route\", \"$2\", \"__name__\", \"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_success_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "Transformer"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.google-cloud-pubsub\\.pubsub-to-mqtt\\.(mapping|transformer)\\.(.+)\\.success\\.count/ and r[\"_measurement\"] !~ /.*total.*/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "InfluxDBTransformer"
            }
          ],
          "title": "PubSub to MQTT success/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 18,
            "y": 148
          },
          "id": 86,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_failed_count\", __name__!~\".*total.*\"}, \"route\", \"$2\", \"__name__\", \"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_failed_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "Transformer"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.google-cloud-pubsub\\.pubsub-to-mqtt\\.(mapping|transformer)\\.(.+)\\.failed\\.count/ and r[\"_measurement\"] !~ /.*total.*/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "InfluxDBTransformer"
            }
          ],
          "title": "PubSub to MQTT failed/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 0,
            "y": 155
          },
          "id": 91,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_received_count\", __name__!~\".*total.*\"}, \"route\", \"$2\", \"__name__\", \"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_received_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "Transformer"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.google-cloud-pubsub\\.pubsub-to-mqtt\\.(mapping|transformer)\\.(.+)\\.received\\.count/ and r[\"_measurement\"] !~ /.*total.*/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "InfluxDBTransformer"
            }
          ],
          "title": "PubSub to MQTT received/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 6,
            "y": 155
          },
          "id": 92,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_sent_count\", __name__!~\".*total.*\"}, \"route\", \"$2\", \"__name__\", \"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_sent_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "Transformer"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.google-cloud-pubsub\\.pubsub-to-mqtt\\.(mapping|transformer)\\.(.+)\\.sent\\.count/ and r[\"_measurement\"] !~ /.*total.*/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "InfluxDBTransformer"
            }
          ],
          "title": "PubSub to MQTT PUBLISH/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 12,
            "y": 155
          },
          "id": 93,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_resent_count\", __name__!~\".*total.*\"}, \"route\", \"$2\", \"__name__\", \"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_resent_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "Transformer"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.google-cloud-pubsub\\.pubsub-to-mqtt\\.(mapping|transformer)\\.(.+)\\.resent\\.count/ and r[\"_measurement\"] !~ /.*total.*/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "InfluxDBTransformer"
            }
          ],
          "title": "PubSub to MQTT resent/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 18,
            "y": 155
          },
          "id": 94,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_ignored_count\", __name__!~\".*total.*\"}, \"route\", \"$2\", \"__name__\", \"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_ignored_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "Transformer"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.google-cloud-pubsub\\.pubsub-to-mqtt\\.(mapping|transformer)\\.(.+)\\.ignored\\.count/ and r[\"_measurement\"] !~ /.*total.*/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "InfluxDBTransformer"
            }
          ],
          "title": "PubSub to MQTT ignored/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 0,
            "y": 162
          },
          "id": 95,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_dropped_count\", __name__!~\".*total.*\"}, \"route\", \"$2\", \"__name__\", \"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_dropped_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "Transformer"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.google-cloud-pubsub\\.pubsub-to-mqtt\\.(mapping|transformer)\\.(.+)\\.dropped\\.count/ and r[\"_measurement\"] !~ /.*total.*/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "InfluxDBTransformer"
            }
          ],
          "title": "PubSub to MQTT dropped/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 6,
            "y": 162
          },
          "id": 96,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_rate_limit_exceeded_count\", __name__!~\".*total.*\"}, \"route\", \"$2\", \"__name__\", \"com_hivemq_extensions_google_cloud_pubsub_pubsub_to_mqtt_(transformer|mapping)_(.+)_rate_limit_exceeded_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "Transformer"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.google-cloud-pubsub\\.pubsub-to-mqtt\\.(mapping|transformer)\\.(.+)\\.rate-limit-exceeded\\.count/ and r[\"_measurement\"] !~ /.*total.*/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "InfluxDBTransformer"
            }
          ],
          "title": "PubSub to MQTT dropped/s",
          "type": "timeseries"
        }
      ],
      "title": "HiveMQ Enterprise Extension for Google Cloud Pub/Sub",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 67
      },
      "id": 77,
      "panels": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 0,
            "y": 133
          },
          "id": 78,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"kafka_extension_topic_mapping_(.+)_success_count\"}, \"mapping\", \"$1\", \"__name__\", \"kafka_extension_topic_mapping_(.+)_success_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{mapping}} success.count",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"kafka_extension_transformer_(.+)_success_count\"}, \"transformer\", \"$1\", \"__name__\", \"kafka_extension_transformer_(.+)_success_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{transformer}} success.count",
              "range": true,
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /kafka-extension\\.topic-mapping\\.(.+)\\.success\\.count/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /kafka-extension\\.transformer\\.(.+)\\.success\\.count/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "D"
            }
          ],
          "title": "MQTT to Kafka success/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 6,
            "y": 133
          },
          "id": 83,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"kafka_extension_topic_mapping_(.+)_success_count\"}, \"mapping\", \"$1\", \"__name__\", \"kafka_extension_topic_mapping_(.+)_success_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{mapping}} success.count",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"kafka_extension_transformer_(.+)_success_count\"}, \"transformer\", \"$1\", \"__name__\", \"kafka_extension_transformer_(.+)_success_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{transformer}} success.count",
              "range": true,
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /kafka-extension\\.topic-mapping\\.(.+)\\.success\\.count/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /kafka-extension\\.transformer\\.(.+)\\.success\\.count/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "D"
            }
          ],
          "title": "MQTT to Kafka success/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 12,
            "y": 133
          },
          "id": 80,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"kafka_extension_kafka_to_mqtt_mapping_(.+)_polled_record_count\"}, \"mapping\", \"$1\", \"__name__\", \"kafka_extension_kafka_to_mqtt_mapping_(.+)_polled_record_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{mapping}} polled-record",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"kafka_extension_kafka_to_mqtt_transformer_(.+)_polled_record_count\"}, \"transformer\", \"$1\", \"__name__\", \"kafka_extension_kafka_to_mqtt_transformer_(.+)_polled_record_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{transformer}} polled-record",
              "range": true,
              "refId": "B"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /kafka-extension\\.kafka-to-mqtt-mapping\\.(.+)\\.polled-record\\.count/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /kafka-extension\\.kafka-to-mqtt-transformer\\.(.+)\\.polled-record\\.count/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "D"
            }
          ],
          "title": "Kafka to MQTT polled record/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 18,
            "y": 133
          },
          "id": 81,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"kafka_extension_kafka_to_mqtt_mapping_(.+)_send_publishes_count\"}, \"mapping\", \"$1\", \"__name__\", \"kafka_extension_kafka_to_mqtt_mapping_(.+)_send_publishes_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{mapping}} publish.sent",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /kafka-extension\\.kafka-to-mqtt-mapping\\.(.+)\\.send-publishes\\.count/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"kafka_extension_kafka_to_mqtt_transformer_(.+)_send_publishes_count\"}, \"transformer\", \"$1\", \"__name__\", \"kafka_extension_kafka_to_mqtt_transformer_(.+)_send_publishes_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{transformer}} publish.sent",
              "range": true,
              "refId": "C"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /kafka-extension\\.kafka-to-mqtt-transformer\\.(.+)\\.send-publishes\\.count/)\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "D"
            }
          ],
          "title": "Kafka to MQTT PUBLISH/s",
          "type": "timeseries"
        }
      ],
      "title": "HiveMQ Enterprise Extension for Kafka",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 68
      },
      "id": 44,
      "panels": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 0,
            "y": 64
          },
          "id": 45,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_mongodb_mqtt_to_mongodb_(.+)_success_count\", __name__!=\"com_hivemq_extensions_mongodb_mqtt_to_mongodb_total_success_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_mongodb_mqtt_to_mongodb_(.+)_success_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.mongodb\\.mqtt-to-mongodb(.+)success\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.mongodb.mqtt-to-mongodb.total.success.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to MongoDB success/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 6,
            "y": 64
          },
          "id": 46,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_mongodb_mqtt_to_mongodb_(.+)_failed_count\", __name__!=\"com_hivemq_extensions_mongodb_mqtt_to_mongodb_total_failed_count\"}, \"interface\", \"$1\", \"__name__\", \"com_hivemq_extensions_mongodb_mqtt_to_mongodb_(.+)_failed_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.mongodb\\.mqtt-to-mongodb(.+)failed\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.mongodb.mqtt-to-mongodb.total.failed.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to MongoDB failed/s",
          "type": "timeseries"
        }
      ],
      "title": "HiveMQ Enterprise Extension for MongoDB",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 69
      },
      "id": 50,
      "panels": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 0,
            "y": 80
          },
          "id": 51,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_mysql_mqtt_to_mysql_(.+)_success_count\", __name__!=\"com_hivemq_extensions_mysql_mqtt_to_mysql_total_success_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_mysql_mqtt_to_mysql_(.+)_success_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.mysql\\.mqtt-to-mysql(.+)success\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.mysql.mqtt-to-mysql.total.success.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to MySQL success/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 6,
            "y": 80
          },
          "id": 52,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_mysql_mqtt_to_mysql_(.+)_failed_count\", __name__!=\"com_hivemq_extensions_mysql_mqtt_to_mysql_total_failed_count\"}, \"interface\", \"$1\", \"__name__\", \"com_hivemq_extensions_mysql_mqtt_to_mysql_(.+)_failed_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.mysql\\.mqtt-to-mysql(.+)failed\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.mysql.mqtt-to-mysql.total.failed.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to MySQL failed/s",
          "type": "timeseries"
        }
      ],
      "title": "HiveMQ Enterprise Extension for MySQL",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 70
      },
      "id": 47,
      "panels": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 0,
            "y": 72
          },
          "id": 48,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_postgresql_mqtt_to_postgresql_(.+)_success_count\", __name__!=\"com_hivemq_extensions_postgresql_mqtt_to_postgresql_total_success_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_postgresql_mqtt_to_postgresql_(.+)_success_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.postgresql\\.mqtt-to-postgresql(.+)success\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.postgresql.mqtt-to-postgresql.total.success.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to Postgresql success/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 6,
            "y": 72
          },
          "id": 49,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_postgresql_mqtt_to_postgresql_(.+)_failed_count\", __name__!=\"com_hivemq_extensions_postgresql_mqtt_to_postgresql_total_failed_count\"}, \"interface\", \"$1\", \"__name__\", \"com_hivemq_extensions_postgresql_mqtt_to_postgresql_(.+)_failed_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.postgresql\\.mqtt-to-postgresql(.+)failed\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.postgresql.mqtt-to-postgresql.total.failed.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to MySQL failed/s",
          "type": "timeseries"
        }
      ],
      "title": "HiveMQ Enterprise Extension for Postgresql",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 71
      },
      "id": 53,
      "panels": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 0,
            "y": 88
          },
          "id": 54,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_snowflake_mqtt_to_snowflake_(.+)_success_count\", __name__!=\"com_hivemq_extensions_snowflake_mqtt_to_snowflake_total_success_count\"}, \"route\", \"$1\", \"__name__\", \"com_hivemq_extensions_snowflake_mqtt_to_snowflake_(.+)_success_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.snowflake\\.mqtt-to-snowflake(.+)success\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.snowflake.mqtt-to-snowflake.total.success.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to Snowflake success/s",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "axisSoftMin": 0,
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 3,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "normal"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 7,
            "w": 6,
            "x": 6,
            "y": 88
          },
          "id": 55,
          "interval": "${intervalSeconds}s",
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "${Prometheus}"
              },
              "editorMode": "code",
              "expr": "rate(label_replace({__name__=~\"com_hivemq_extensions_snowflake_mqtt_to_snowflake_(.+)_failed_count\", __name__!=\"com_hivemq_extensions_snowflake_mqtt_to_snowflake_total_failed_count\"}, \"interface\", \"$1\", \"__name__\", \"com_hivemq_extensions_snowflake_mqtt_to_snowflake_(.+)_failed_count\")[${intervalSeconds}s:${intervalSeconds}s])",
              "hide": false,
              "instant": false,
              "legendFormat": "{{instance}} {{route}}",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${InfluxDB}"
              },
              "hide": false,
              "query": "from(bucket: v.defaultBucket)\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r[\"_measurement\"] =~ /com\\.hivemq\\.extensions\\.snowflake\\.mqtt-to-snowflake(.+)failed\\.count/ and r[\"_measurement\"] != \"com.hivemq.extensions.snowflake.mqtt-to-snowflake.total.failed.count\")\n    |> drop(columns: [\"_start\", \"_stop\", \"_measurement\", \"_field\"])\n    |> aggregateWindow(every: ${intervalSeconds}s, fn: max)\n    |> map(fn: (r) => ({ r with _value: r._value / ${intervalSeconds}.0 }))\n    |> difference(nonNegative: true)",
              "refId": "B"
            }
          ],
          "title": "MQTT to Snowflake failed/s",
          "type": "timeseries"
        }
      ],
      "title": "HiveMQ Enterprise Extension for Snowflake",
      "type": "row"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 38,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "Localhost InfluxDB",
          "value": "daed86f4-7667-4fbd-8226-741dd4055ab4"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "InfluxDB",
        "options": [],
        "query": "influxdb",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {
          "selected": false,
          "text": "Localhost Prometheus",
          "value": "f145a4fd-8610-49e4-9ece-047355e078c7"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "Prometheus",
        "options": [],
        "query": "prometheus",
        "queryValue": "",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {
          "selected": false,
          "text": "30",
          "value": "30"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Interval Seconds",
        "multi": false,
        "name": "intervalSeconds",
        "options": [
          {
            "selected": false,
            "text": "5",
            "value": "5"
          },
          {
            "selected": false,
            "text": "10",
            "value": "10"
          },
          {
            "selected": true,
            "text": "30",
            "value": "30"
          },
          {
            "selected": false,
            "text": "60",
            "value": "60"
          },
          {
            "selected": false,
            "text": "120",
            "value": "120"
          }
        ],
        "query": "5,10,30,60,120",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-30m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "HiveMQ Platform (Prometheus + InfluxDB)",
  "version": 1,
  "weekStart": ""
}